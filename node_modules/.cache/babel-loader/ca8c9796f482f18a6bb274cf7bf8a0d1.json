{"ast":null,"code":"import _asyncToGenerator from\"/home/linux/learn with sumit/4/think-in-a-redux-way/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/linux/learn with sumit/4/think-in-a-redux-way/node_modules/@babel/runtime/regenerator/index.js\";import{colorSelected}from\"../actions\";var updatedColor=function updatedColor(todoId,color){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,todo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:9000/todos/\".concat(todoId),{method:\"PATCH\",body:JSON.stringify({color:color}),headers:{\"Content-type\":\"application/json;charset=UTF-8\"}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:todo=_context.sent;dispatch(colorSelected(todo.id,todo.color));case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export default updatedColor;","map":{"version":3,"sources":["/home/linux/learn with sumit/4/think-in-a-redux-way/src/redux/todos/thunk/updatedColor.js"],"names":["colorSelected","updatedColor","todoId","color","dispatch","fetch","method","body","JSON","stringify","headers","response","json","todo","id"],"mappings":"qRAAA,OAAQA,aAAR,KAA6B,YAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAASC,KAAT,CAAmB,CACtC,+FAAO,iBAAOC,QAAP,0JACkBC,CAAAA,KAAK,uCAAgCH,MAAhC,EAA0C,CACpEI,MAAM,CAAE,OAD4D,CAEpEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACrBN,KAAK,CAACA,KADe,CAAf,CAF8D,CAKpEO,OAAO,CAAE,CAAE,eAAgB,gCAAlB,CAL2D,CAA1C,CADvB,QACCC,QADD,qCAQaA,CAAAA,QAAQ,CAACC,IAAT,EARb,QAQCC,IARD,eASLT,QAAQ,CAACJ,aAAa,CAACa,IAAI,CAACC,EAAN,CAASD,IAAI,CAACV,KAAd,CAAd,CAAR,CATK,sDAAP,+DAWD,CAZD,CAeA,cAAgBF,CAAAA,YAAhB","sourcesContent":["import {colorSelected } from \"../actions\";\n\nconst updatedColor = (todoId, color) => {\n  return async (dispatch) => {\n    const response = await fetch(`http://localhost:9000/todos/${todoId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n      color:color\n      }),\n      headers: { \"Content-type\": \"application/json;charset=UTF-8\" },\n    });\n    const todo= await response.json()\n    dispatch(colorSelected(todo.id,todo.color))\n  };\n};\n\n\nexport default  updatedColor"]},"metadata":{},"sourceType":"module"}