{"ast":null,"code":"import _toConsumableArray from\"/home/linux/learn with sumit/4/think-in-a-redux-way/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/linux/learn with sumit/4/think-in-a-redux-way/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{COLORCHANGED,STATUSCHANGED}from\"./actionTypes\";import initialState from\"./initialState\";var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case STATUSCHANGED:return _objectSpread(_objectSpread({},state),{},{status:action.payload});case COLORCHANGED:var _action$payload=action.payload,color=_action$payload.color,changeType=_action$payload.changeType;switch(changeType){case\"added\":return _objectSpread(_objectSpread({},state),{},{colors:[].concat(_toConsumableArray(state.colors),[color])});case\"removed\":return _objectSpread(_objectSpread({},state),{},{colors:state.colors.filter(function(existingColor){return existingColor!==color;})});default:return state;}default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/linux/learn with sumit/4/think-in-a-redux-way/src/redux/filters/reducer.js"],"names":["COLORCHANGED","STATUSCHANGED","initialState","reducer","state","action","type","status","payload","color","changeType","colors","filter","existingColor"],"mappings":"yRAAA,OAASA,YAAT,CAAuBC,aAAvB,KAA4C,eAA5C,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBF,YAAyB,IAAXG,CAAAA,MAAW,2CAC9C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKL,CAAAA,aAAL,CACI,sCACOG,KADP,MAEIG,MAAM,CAAEF,MAAM,CAACG,OAFnB,GAKJ,IAAKR,CAAAA,YAAL,CACI,oBAA8BK,MAAM,CAACG,OAArC,CAAQC,KAAR,iBAAQA,KAAR,CAAeC,UAAf,iBAAeA,UAAf,CAEA,OAAQA,UAAR,EACI,IAAK,OAAL,CACI,sCACON,KADP,MAEIO,MAAM,8BAAMP,KAAK,CAACO,MAAZ,GAAoBF,KAApB,EAFV,GAKJ,IAAK,SAAL,CACI,sCACOL,KADP,MAEIO,MAAM,CAAEP,KAAK,CAACO,MAAN,CAAaC,MAAb,CACJ,SAACC,aAAD,QAAmBA,CAAAA,aAAa,GAAKJ,KAArC,EADI,CAFZ,GAOJ,QACI,MAAOL,CAAAA,KAAP,CAhBR,CAmBJ,QACI,MAAOA,CAAAA,KAAP,CA9BR,CAgCH,CAjCD,CAmCA,cAAeD,CAAAA,OAAf","sourcesContent":["import { COLORCHANGED, STATUSCHANGED } from \"./actionTypes\";\nimport initialState from \"./initialState\";\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case STATUSCHANGED:\n            return {\n                ...state,\n                status: action.payload,\n            };\n\n        case COLORCHANGED:\n            const { color, changeType } = action.payload;\n\n            switch (changeType) {\n                case \"added\":\n                    return {\n                        ...state,\n                        colors: [...state.colors, color],\n                    };\n\n                case \"removed\":\n                    return {\n                        ...state,\n                        colors: state.colors.filter(\n                            (existingColor) => existingColor !== color\n                        ),\n                    };\n\n                default:\n                    return state;\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}